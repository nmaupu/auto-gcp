{
  "variables": {
    "google_creds": "{{env `GOOGLE_APPLICATION_CREDENTIALS`}}",
    "project_id": "{{env `PROJECT_ID`}}",
    "zone": "{{env `ZONE`}}",
    "image_name_prefix": "{{env `IMAGE_NAME_PREFIX`}}",
    "ingress_controller_port": "{{env `INGRESS_CONTROLLER_PORT`}}",
    "ingress_receiver_version": "{{env `INGRESS_RECEIVER_VERSION`}}",
    "le_email_address": "{{env `LE_EMAIL_ADDRESS`}}",
    "lego_version": "{{env `LEGO_VERSION`}}",
    "ingress_receiver_port": "{{env `INGRESS_RECEIVER_PORT`}}"
  },
  "builders": [{
      "type": "googlecompute",
      "account_file": "{{user `google_creds`}}",
      "project_id": "{{user `project_id`}}",
      "source_image_family": "centos-7",
	  "image_family": "rproxy",
      "zone": "{{user `zone`}}",
      "image_name": "{{user `image_name_prefix`}}-{{isotime | clean_image_name}}",
      "ssh_username": "centos",
      "ssh_pty": true,
      "preemptible": true
  }],
  "provisioners": [
    {
      "type": "file",
      "source": "resources/nginx.conf",
      "destination": "/tmp/nginx.conf"
    },
    {
      "type": "file",
      "source": "resources/nginx-redirect-http.conf",
      "destination": "/tmp/redirect-http.conf"
    },
    {
      "type": "file",
      "source": "resources/update-kube-nodes.sh",
      "destination": "/tmp/update-kube-nodes.sh"
    },
    {
      "type": "file",
      "source": "resources/crons.cron",
      "destination": "/tmp/crons.cron"
    },
    {
      "type": "file",
      "source": "resources/ingress-add.sh",
      "destination": "/tmp/ingress-add.sh"
    },
    {
      "type": "file",
      "source": "resources/ingress-del.sh",
      "destination": "/tmp/ingress-del.sh"
    },
    {
      "type": "file",
      "source": "resources/ingress-receiver.service",
      "destination": "/tmp/ingress-receiver.service"
    },
    {
      "type": "file",
      "source": "resources/nginx.tpl",
      "destination": "/tmp/nginx.tpl"
    },
    {
      "type": "file",
      "source": "resources/renew-lego.sh",
      "destination": "/tmp/renew-lego.sh"
    },
    {
      "type": "shell",
      "inline": [
        "sudo yum install -y nginx jq wget",
        "sudo mv /tmp/nginx.conf /etc/nginx/nginx.conf",
        "sudo mv /tmp/redirect-http.conf /etc/nginx/conf.d",
        "sudo mv /tmp/update-kube-nodes.sh /usr/local/bin",
        "sudo chmod +x /usr/local/bin/update-kube-nodes.sh",
        "sudo mv /tmp/ingress-add.sh /usr/local/bin",
        "sudo chmod +x /usr/local/bin/ingress-add.sh",
        "sudo mv /tmp/ingress-del.sh /usr/local/bin",
        "sudo chmod +x /usr/local/bin/ingress-del.sh",
        "sudo mv /tmp/renew-lego.sh /usr/local/bin",
        "sudo chmod +x /usr/local/bin/renew-lego.sh",
        "sudo sed -i -e 's/@@PORT@@/{{user `ingress_controller_port`}}/g' /usr/local/bin/update-kube-nodes.sh",
        "sudo sed -i -e 's/@@LE_EMAIL_ADDRESS@@/{{user `le_email_address`}}/g' /usr/local/bin/ingress-add.sh /usr/local/bin/renew-lego.sh",
        "sudo wget -O /usr/local/bin/kube-ingwatcher https://github.com/nmaupu/kube-ingwatcher/releases/download/v{{user `ingress_receiver_version`}}/kube-ingwatcher_linux-amd64",
        "sudo chmod +x /usr/local/bin/kube-ingwatcher",
        "sudo wget -O /tmp/lego.tar.xz https://github.com/xenolf/lego/releases/download/v{{user `lego_version`}}/lego_linux_amd64.tar.xz",
        "sudo tar -C /usr/local/bin -xvJf /tmp/lego.tar.xz lego_linux_amd64 && sudo rm -f /tmp/lego.tar.xz",
        "sudo mv /usr/local/bin/lego_linux_amd64 /usr/local/bin/lego",
        "sudo chmod +x /usr/local/bin/lego",
        "sudo sed -i -e 's/@@INGRESS_RECEIVER_PORT@@/{{user `ingress_receiver_port`}}/g' /tmp/ingress-receiver.service",
        "sudo mv /tmp/ingress-receiver.service /etc/systemd/system/ingress-receiver.service",
        "sudo mv /tmp/nginx.tpl /etc/nginx/nginx.tpl",
        "sudo su -c \"echo -n 'server localhost:80;' > /etc/nginx/kube-nodes.inc\"",
        "sudo crontab -u root /tmp/crons.cron && sudo rm -f /tmp/crons.cron",
        "sudo systemctl daemon-reload",
        "sudo systemctl enable nginx",
        "sudo systemctl enable ingress-receiver",
        "sudo setsebool -P httpd_can_network_connect 1"
      ]
    }
  ]
}
